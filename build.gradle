plugins {
	id 'fabric-loom' version '1.7.3'
	id 'legacy-looming' version '1.7-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.+'
	id "com.modrinth.minotaur" version "2.+"
}

apply plugin: "com.modrinth.minotaur"
apply plugin: "com.matthewprenger.cursegradle"

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://jitpack.io' }
	maven { url "https://maven.fabricmc.net/" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://repo.legacyfabric.net/"}
	maven {
		name = 'legacy-fabric'
		url = 'https://maven.legacyfabric.net'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.legacyfabric:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.fabric_version}"
}

if (System.getenv("CURSEFORGE_TOKEN") != null) {
	curseforge {
		apiKey = System.getenv("CURSEFORGE_TOKEN")
		project {
			id = '517673'
			changelog = project.changelog
			releaseType = 'release'
			addGameVersion "Fabric"
			addGameVersion project.minecraft_version
			relations {
				requiredDependency "fabric-api"
				optionalDependency "simple-backpack-fabric"
			}

			mainArtifact(tasks.remapJar)
		}
	}
}

if (System.getenv("MODRINTH_TOKEN") != null) {
	modrinth {
		token = System.getenv("MODRINTH_TOKEN")
		projectId = 'styMEyoE'
		versionNumber = project.mod_version + "-fabric"
		gameVersions = [project.minecraft_version]
		versionType = 'release'
		uploadFile = tasks.remapJar
		changelog = project.changelog
		loaders = ["fabric"]
		dependencies {
			required.project "P7dR8mSH" // Fabric API
		}
	}
}

processResources {
	inputs.property "version", project.version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

def targetJavaVersion = 8
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = targetJavaVersion

	options.release = 8
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
	options.release = 8
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
	archivesBaseName = project.archives_base_name
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {

	}
}
